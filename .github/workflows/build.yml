name: publish
on: 
  workflow_dispatch:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - '*'
  release:
    types:
    - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

jobs:
  tests:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Restore
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --configuration Release --no-restore

    - name: REf
      run: echo ${{ github.ref }}

  build:
    runs-on: ubuntu-latest
    needs: [ tests ]
    
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: GitVersion Setup
      uses: gittools/actions/gitversion/setup@v1.1.1
      with:
        versionSpec: '5.x'
    
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v1.1.1
      id: version
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml
    
    - name: Use the version
      run: |
        echo ${{ env.semVer }}
    
    - name: Restore
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore

    - run: dotnet pack --configuration Release --output ${{env.NuGetDirectory}} -p:PackageVersion=${{ env.semVer }}

    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{env.NuGetDirectory}}/*.nupkg

  deploy:
    runs-on: ubuntu-latest
    needs: [ tests, build ]
    
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{env.NuGetDirectory}}
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{env.NuGetDirectory}}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{secrets.NUGET_APIKEY}}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }